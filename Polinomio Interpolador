package mncclase1;

import java.text.DecimalFormat;
import java.util.Scanner;
//No anda nada porque no se como se hace-------------------------------------------------------------

public class PolinomioInterpolador {
    public static void main(String[] args) {
        int TAM = 2; // Cantidad de X e Y
        double[] Xn = new double[TAM];
        double[] Yn = new double[TAM];
        double[][] a = new double[TAM][TAM];
        double[] b = new double[TAM];
        double Xsombrero = 2; // Valor a interpolar
        CargarMatriz1(Xn, Yn);
        System.out.println("Controlar los datos:");
        ImprimirrMatriz1(Xn, Yn);
        
        // Preparar la matriz A y el vector b
        for (int i = 0; i < TAM; i++) {
            for (int j = 0; j < TAM; j++) {
                a[i][j] = Math.pow(Xn[i], j);
            }
            b[i] = Yn[i];
        }

        // METODO ELIMINACION GAUSS
        double[] xr = new double[TAM];
        double factor, swap, det = 1, xn;

        // Algoritmo de eliminación de Gauss
        for (int i = 0; i < TAM - 1; i++) {
            if (Math.abs(a[i][i]) < 0.00001) {
                for (int j = i + 1; j < TAM; j++) {
                    if (Math.abs(a[j][i]) > Math.abs(a[i][i])) {
                        for (int k = i; k < TAM; ++k) {
                            System.out.println("Se realizo pivoteo");
                            swap = a[i][k];
                            a[i][k] = a[j][k];
                            a[j][k] = swap;
                        }
                        swap = b[i];
                        b[i] = b[j];
                        b[j] = swap;
                    }
                }
            }

            for (int j = i + 1; j < TAM; j++) {
                factor = -a[j][i] / a[i][i];
                for (int k = 0; k < TAM; ++k) {
                    a[j][k] = a[i][k] * factor + a[j][k];
                }
                b[j] = b[i] * factor + b[j];
            }
        }

        // Determinante
        for (int i = 0; i < TAM; i++) {
            det *= a[i][i];
        }
        System.out.println("El determinante es: " + det);

        // Retrosustitución
        if (det == 0) {
            System.out.println("La matriz no tiene solución única.");
        } else {
            xn = b[TAM - 1] / a[TAM - 1][TAM - 1];
            xr[TAM - 1] = xn;
            for (int i = TAM - 2; i >= 0; --i) {
                double sum = 0;
                for (int j = i + 1; j < TAM; ++j) {
                    sum += a[i][j] * xr[j];
                }
                xn = (b[i] - sum) / a[i][i];
                xr[i] = xn;
            }

            System.out.println("Conjunto solución:");
            ImprimirMatriz(a, b);
            System.out.println("CONJUNTO SOLUCION");
            DecimalFormat df = new DecimalFormat("0.00000");
            for (int i = 0; i < TAM; i++) {
                System.out.println("| " + df.format(xr[i]) + " ");
            }
        }

        // Armar y mostrar el polinomio
        imprimirPolinomio(xr);

        // Evaluar el polinomio en Xsombrero
        double suma = 0;
        for (int i = 0; i < TAM; i++) {
            suma += xr[i] * Math.pow(Xsombrero, i);
        }
        System.out.println("Valor del polinomio en X = " + Xsombrero + ": " + suma);
    }

    public static void CargarMatriz1(double[] Xn, double[] Yn) {
        Scanner consola = new Scanner(System.in);
        for (int i = 0; i < Xn.length; i++) {
            System.out.println("Ingrese el Xn[" + i + "]");
            Xn[i] = consola.nextDouble();
            System.out.println("Ingrese el Yn[" + i + "]");
            Yn[i] = consola.nextDouble();
        }
    }

    public static void ImprimirrMatriz1(double[] Xn, double[] Yn) {
        DecimalFormat df = new DecimalFormat("0.00000");
        System.out.println("  X  |  Y  ");
        for (int i = 0; i < Xn.length; i++) {
            System.out.println(df.format(Xn[i]) + " | " + df.format(Yn[i]));
        }
    }

    public static void ImprimirMatriz(double[][] matriz, double[] matrizb) {
        DecimalFormat df = new DecimalFormat("0.00000");
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz[0].length; j++) {
                System.out.print(df.format(matriz[i][j]) + " ");
            }
            System.out.print("| " + df.format(matrizb[i]) + " ");
            System.out.println();
        }
    }

    public static void imprimirPolinomio(double[] coeficientes) {
        System.out.print("El polinomio interpolador es: P(x) = ");
        for (int i = 0; i < coeficientes.length; i++) {
            if (i > 0 && coeficientes[i] >= 0) {
                System.out.print(" + ");
            }
            System.out.print(coeficientes[i]);
            if (i > 0) {
                System.out.print("x^" + i);
            }
        }
        System.out.println();
    }
}
